@use "sass:math";

@function decimal-round ($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @if $digits > 0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }
  @if $mode == round {
    @return math.round($number * $n) / $n;
  } @else if $mode == ceil {
    @return math.ceil($number * $n) / $n;
  } @else if $mode == floor {
    @return math.floor($number * $n) / $n;
  } @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}
/*.flip-list-move {
  transition: transform 0.5s;
}
.flip-list{
  transition:all 0.9s;
}
.flip-list-move {
  transition: transform 0.5s;
}
.no-move {
  transition: transform 0s;
}*/
@mixin clear_fix{
  &:after{
    content: '';
    clear: both;
    display: block;
    overflow: hidden;
  }
}

@function pxToEm($unitLess,$fontSize:13){
  @if($unitLess!=''){
    @return math.div($unitLess,$fontSize)+em;
  }
}

@function pxToRem($unitLess,$fontSize:14){
    @if($unitLess!=''){
        @return math.div($unitLess,$fontSize)+rem;
    }
}
@function pxTorem($unitLess,$fontSize:14){
  @if($unitLess!=''){
    @return math.div($unitLess,$fontSize)+rem;
  }
}


/* transition set */
/*@function transitionSet($number,$all:all){
  @if($number!=0){
    @return "transition:"+$all+' '+$number+'s';
  }
}*/
